version: '3.9'

services:
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - webnet
  server:
    build: ./server
    command: sh -c "poetry run python manage.py migrate && poetry run python manage.py createsu && poetry run uwsgi --ini uwsgi.ini"
    volumes:
      - static_volume:/www/static
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - webnet
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: sh -c "PORT=${FRONTEND_PORT} npm run dev -- --host"
    env_file:
      - ./.env
    networks:
      - webnet
  nginx:
    build: ./nginx
    command: nginx -g 'daemon off;'
    ports:
      - "80:80"
    volumes:
      - static_volume:/www/static
    depends_on:
      - server
      - frontend
    networks:
      - webnet
volumes:
  postgres_data:
  static_volume:

networks:
    webnet: