version: '3.9'

services:
  db:
    image: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - webnet
  server:
    image: mykytaproks/resume_server:${TAG}
    restart: unless-stopped
    command: sh -c "poetry run python manage.py migrate && poetry run python manage.py createsu && poetry run uwsgi --ini uwsgi.ini --http :8000"
    volumes:
      - static_volume:/www/static
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DEBUG=${DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    depends_on:
      - db
    networks:
      - webnet
  frontend:
    image: mykytaproks/resume_frontend:${TAG}
    restart: unless-stopped
    command: sh -c "PORT=${FRONTEND_PORT} node build"
    networks:
      - webnet
  nginx:
    image: mykytaproks/resume_nginx:${TAG}
    restart: on-failure
    ports:
      - "80:80"
    volumes:
      - static_volume:/www/static
    depends_on:
      - server
      - frontend
    networks:
      - webnet
volumes:
  postgres_data:
  static_volume:

networks:
    webnet: